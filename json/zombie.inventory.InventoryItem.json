{
  "name": "InventoryItem",
  "package": "zombie.inventory",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "InventoryItem",
      "describe": [],
      "args": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ]
    },
    {
      "scope": "package",
      "name": "InventoryItem",
      "describe": [],
      "args": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "zombie.scripting.objects.Item"
      ]
    },
    {
      "scope": "package",
      "name": "id",
      "describe": [],
      "args": [
        "zombie.scripting.objects.Item"
      ]
    },
    {
      "scope": "package",
      "name": "id",
      "describe": [],
      "args": []
    }
  ],
  "fields": [
    {
      "name": "Cooked",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "ReplaceOnUseOn",
      "scope": "public",
      "type": "java.lang.String",
      "describe": []
    },
    {
      "name": "col",
      "scope": "public",
      "type": "zombie.core.Color",
      "describe": []
    },
    {
      "name": "IsWaterSource",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "CanStoreWater",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "CanStack",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "fatigueChange",
      "scope": "public",
      "type": "float",
      "describe": []
    },
    {
      "name": "worldItem",
      "scope": "public",
      "type": "zombie.iso.objects.IsoWorldInventoryObject",
      "describe": []
    },
    {
      "name": "id",
      "scope": "public",
      "type": "int",
      "describe": []
    },
    {
      "name": "RequiresEquippedBothHands",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "byteData",
      "scope": "public",
      "type": "java.nio.ByteBuffer",
      "describe": []
    },
    {
      "name": "extraItems",
      "scope": "public",
      "type": "java.util.ArrayList<java.lang.String>",
      "describe": []
    },
    {
      "name": "keepOnDeplete",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "worldZRotation",
      "scope": "public",
      "type": "int",
      "describe": []
    },
    {
      "name": "worldScale",
      "scope": "public",
      "type": "float",
      "describe": []
    },
    {
      "name": "atlasTexture",
      "scope": "public",
      "type": "zombie.core.skinnedmodel.model.WorldItemAtlas$ItemTexture",
      "describe": []
    },
    {
      "name": "jobDelta",
      "scope": "public",
      "type": "float",
      "describe": []
    },
    {
      "name": "jobType",
      "scope": "public",
      "type": "java.lang.String",
      "describe": []
    },
    {
      "name": "mainCategory",
      "scope": "public",
      "type": "java.lang.String",
      "describe": []
    },
    {
      "name": "CloseKillMove",
      "scope": "public",
      "type": "java.lang.String",
      "describe": []
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getSaveType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.objects.IsoWorldInventoryObject",
      "name": "getWorldItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEquipParent",
      "args": [
        "zombie.characters.IsoGameCharacter"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.characters.IsoGameCharacter",
      "name": "getEquipParent",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getBringToBearSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getEquipSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getUnequipSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWorldItem",
      "args": [
        "zombie.iso.objects.IsoWorldInventoryObject"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setJobDelta",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getJobDelta",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setJobType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getJobType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasModData",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "se.krka.kahlua.vm.KahluaTable",
      "name": "getModData",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "storeInByteData",
      "args": [
        "zombie.iso.IsoObject"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.nio.ByteBuffer",
      "name": "getByteData",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isRequiresEquippedBothHands",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getA",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getR",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getG",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getB",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.Texture",
      "name": "getTex",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getCategory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsRotten",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "HowRotten",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "CanStack",
      "args": [
        "zombie.inventory.InventoryItem"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "ModDataMatches",
      "args": [
        "zombie.inventory.InventoryItem"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "DoTooltip",
      "args": [
        "zombie.ui.ObjectTooltip"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getCleanString",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "DoTooltip",
      "args": [
        "zombie.ui.ObjectTooltip",
        "zombie.ui.ObjectTooltip$Layout"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetContainerPosition",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Use",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "UseItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Use",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Use",
      "args": [
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "shouldUpdateInWorld",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "finishupdate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "updateSound",
      "args": [
        "zombie.audio.BaseSoundEmitter"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getFullType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "save",
      "args": [
        "java.nio.ByteBuffer",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "zombie.inventory.InventoryItem",
      "name": "loadItem",
      "args": [
        "java.nio.ByteBuffer",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "zombie.inventory.InventoryItem",
      "name": "loadItem",
      "args": [
        "java.nio.ByteBuffer",
        "int",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "load",
      "args": [
        "java.nio.ByteBuffer",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsFood",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsWeapon",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsDrainable",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsLiterature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsClothing",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsInventoryContainer",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsMap",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.inventory.ItemContainer",
      "name": "getOutermostContainer",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isInLocalPlayerInventory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isInPlayerInventory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.scripting.objects.ItemReplacement",
      "name": "getItemReplacementPrimaryHand",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.scripting.objects.ItemReplacement",
      "name": "getItemReplacementSecondHand",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.skinnedmodel.population.ClothingItem",
      "name": "getClothingItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAlternateModelName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.skinnedmodel.visual.ItemVisual",
      "name": "getVisual",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "allowRandomTint",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "synchWithVisual",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getContainerX",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setContainerX",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getContainerY",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setContainerY",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isDisappearOnUse",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setName",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnUse",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setReplaceOnUse",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnUseFullType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getConditionMax",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setConditionMax",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.inventory.ItemContainer",
      "name": "getRightClickContainer",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRightClickContainer",
      "args": [
        "zombie.inventory.ItemContainer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getSwingAnim",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.Texture",
      "name": "getTexture",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTexture",
      "args": [
        "zombie.core.textures.Texture"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.Texture",
      "name": "getTexturerotten",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTexturerotten",
      "args": [
        "zombie.core.textures.Texture"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.Texture",
      "name": "getTextureCooked",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTextureCooked",
      "args": [
        "zombie.core.textures.Texture"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.Texture",
      "name": "getTextureBurnt",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTextureBurnt",
      "args": [
        "zombie.core.textures.Texture"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCurrentUses",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getUses",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUses",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAge",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAge",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getLastAged",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setLastAged",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "updateAge",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAutoAge",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isIsCookable",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCookable",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setIsCookable",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCookingTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCookingTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMinutesToCook",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMinutesToCook",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMinutesToBurn",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMinutesToBurn",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCooked",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCooked",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBurnt",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBurnt",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getOffAge",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setOffAge",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getOffAgeMax",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setOffAgeMax",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWeight",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getActualWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setActualWeight",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getWorldTexture",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWorldTexture",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getDescription",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDescription",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCondition",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCondition",
      "args": [
        "int",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCondition",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getOffString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setOffString",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getCookedString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCookedString",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getUnCookedString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUnCookedString",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getBurntString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBurntString",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getModule",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setModule",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isAlwaysWelcomeGift",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCanBandage",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBoredomChange",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBoredomChange",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getUnhappyChange",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUnhappyChange",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getStressChange",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStressChange",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getTags",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasTag",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<zombie.iso.IsoObject>",
      "name": "getTaken",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTaken",
      "args": [
        "java.util.ArrayList<zombie.iso.IsoObject>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoDirections",
      "name": "getPlaceDir",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPlaceDir",
      "args": [
        "zombie.iso.IsoDirections"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoDirections",
      "name": "getNewPlaceDir",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setNewPlaceDir",
      "args": [
        "zombie.iso.IsoDirections"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setReplaceOnUseOn",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnUseOn",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnUseOnString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceTypes",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.HashMap<java.lang.String,java.lang.String>",
      "name": "getReplaceTypesMap",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasReplaceType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setIsWaterSource",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isWaterSource",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "CopyModData",
      "args": [
        "se.krka.kahlua.vm.KahluaTable"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "copyModData",
      "args": [
        "se.krka.kahlua.vm.KahluaTable"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCount",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCount",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isActivated",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setActivated",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setActivatedRemote",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCanBeActivated",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "canBeActivated",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setLightStrength",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getLightStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTorchCone",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTorchCone",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTorchDot",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getLightDistance",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setLightDistance",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "canEmitLight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isEmittingLight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "canStoreWater",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFatigueChange",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setFatigueChange",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCurrentCondition",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setColor",
      "args": [
        "zombie.core.Color"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.Color",
      "name": "getColor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.textures.ColorInfo",
      "name": "getColorInfo",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTwoHandWeapon",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getCustomMenuOption",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCustomMenuOption",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTooltip",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getTooltip",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getDisplayCategory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDisplayCategory",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getHaveBeenRepaired",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setHaveBeenRepaired",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBroken",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBroken",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getDisplayName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTrap",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "addExtraItem",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "haveExtraItems",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getExtraItems",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getExtraItemsWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCustomName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCustomName",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isFishingLure",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "copyConditionModData",
      "args": [
        "zombie.inventory.InventoryItem"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setConditionFromModData",
      "args": [
        "zombie.inventory.InventoryItem"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getBreakSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBreakSound",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getPlaceOneSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getPlaceMultipleSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getSoundByID",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBeingFilled",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBeingFilled",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getFillFromDispenserSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getFillFromTapSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isAlcoholic",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAlcoholic",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAlcoholPower",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAlcoholPower",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBandagePower",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBandagePower",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getReduceInfectionPower",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setReduceInfectionPower",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "final"
      ],
      "return": "void",
      "name": "saveWithSize",
      "args": [
        "java.nio.ByteBuffer",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCustomWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCustomWeight",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getContentsWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getHotbarEquippedWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getEquippedWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getUnequippedWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isEquipped",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getKeyId",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setKeyId",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTaintedWater",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTaintedWater",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isRemoteController",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRemoteController",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "canBeRemote",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCanBeRemote",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getRemoteControlID",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRemoteControlID",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getRemoteRange",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRemoteRange",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getExplosionSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setExplosionSound",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getCountDownSound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCountDownSound",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getColorRed",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setColorRed",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getColorGreen",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setColorGreen",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getColorBlue",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setColorBlue",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getEvolvedRecipeName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEvolvedRecipeName",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMetalValue",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMetalValue",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getItemHeat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setItemHeat",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getInvHeat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMeltingTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMeltingTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getWorker",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWorker",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getID",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setID",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isWet",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWet",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWetCooldown",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWetCooldown",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getItemWhenDry",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setItemWhenDry",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isFavorite",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setFavorite",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getRequireInHandOrInventory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRequireInHandOrInventory",
      "args": [
        "java.util.ArrayList<java.lang.String>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCustomColor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCustomColor",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "doBuildingStash",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStashMap",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getMechanicType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getItemCapacity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setItemCapacity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getMaxCapacity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMaxCapacity",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isConditionAffectsCapacity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBrakeForce",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBrakeForce",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getChanceToSpawnDamaged",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setChanceToSpawnDamaged",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getConditionLowerNormal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setConditionLowerNormal",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getConditionLowerOffroad",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setConditionLowerOffroad",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWheelFriction",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWheelFriction",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSuspensionDamping",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSuspensionDamping",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSuspensionCompression",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSuspensionCompression",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setInfected",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isInfected",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getEngineLoudness",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEngineLoudness",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getStaticModel",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getIconsForTexture",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setIconsForTexture",
      "args": [
        "java.util.ArrayList<java.lang.String>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getScore",
      "args": [
        "zombie.characters.SurvivorDesc"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.characters.IsoGameCharacter",
      "name": "getPreviousOwner",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPreviousOwner",
      "args": [
        "zombie.characters.IsoGameCharacter"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.scripting.objects.Item",
      "name": "getScriptItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setScriptItem",
      "args": [
        "zombie.scripting.objects.Item"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.inventory.ItemType",
      "name": "getCat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCat",
      "args": [
        "zombie.inventory.ItemType"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.inventory.ItemContainer",
      "name": "getContainer",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setContainer",
      "args": [
        "zombie.inventory.ItemContainer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<zombie.characterTextures.BloodClothingType>",
      "name": "getBloodClothingType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBloodClothingType",
      "args": [
        "java.util.ArrayList<zombie.characterTextures.BloodClothingType>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBlood",
      "args": [
        "zombie.characterTextures.BloodBodyPartType",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBlood",
      "args": [
        "zombie.characterTextures.BloodBodyPartType"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDirt",
      "args": [
        "zombie.characterTextures.BloodBodyPartType",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDirt",
      "args": [
        "zombie.characterTextures.BloodBodyPartType"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getClothingItemName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getStashChance",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStashChance",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getEatType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isUseWorldItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHairDye",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAmmoType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAmmoType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getMaxAmmo",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMaxAmmo",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCurrentAmmoCount",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCurrentAmmoCount",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getGunType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGunType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasBlood",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasDirt",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAttachmentType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachmentType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getAttachedSlot",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachedSlot",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getAttachmentsProvided",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachmentsProvided",
      "args": [
        "java.util.ArrayList<java.lang.String>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAttachedSlotType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachedSlotType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAttachmentReplacement",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachmentReplacement",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAttachedToModel",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAttachedToModel",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getFabricType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getStringItemType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isProtectFromRainWhileEquipped",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isEquippedNoSprint",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getBodyLocation",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getMakeUpType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHidden",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getConsolidateOption",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getClothingItemExtra",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.String>",
      "name": "getClothingItemExtraOption",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getWorldStaticItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getModID",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getModName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isVanilla",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "short",
      "name": "getRecordedMediaIndex",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRecordedMediaIndex",
      "args": [
        "short"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRecordedMediaIndexInteger",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isRecordedMedia",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.radio.media.MediaData",
      "name": "getMediaData",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "byte",
      "name": "getMediaType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setMediaType",
      "args": [
        "byte"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRecordedMediaData",
      "args": [
        "zombie.radio.media.MediaData"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWorldZRotation",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWorldScale",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getLuaCreate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isInitialised",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setInitialised",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "initialiseItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getSoundParameter",
      "args": [
        "java.lang.String"
      ]
    }
  ]
}