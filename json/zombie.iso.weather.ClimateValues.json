{
  "name": "ClimateValues",
  "package": "zombie.iso.weather",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "ClimateValues",
      "describe": [],
      "args": [
        "zombie.iso.weather.ClimateManager"
      ]
    }
  ],
  "fields": [],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateValues",
      "name": "getCopy",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "CopyValues",
      "args": [
        "zombie.iso.weather.ClimateValues"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "print",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "pollDate",
      "args": [
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "pollDate",
      "args": [
        "int",
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "pollDate",
      "args": [
        "int",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "pollDate",
      "args": [
        "java.util.GregorianCalendar"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDawn",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDusk",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getNoon",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getAirMassNoiseFrequencyMod",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getNoiseAirmass",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirMassTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBaseTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayLightLagged",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getNightLagged",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTemperatureIsSnow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getHumidity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleDegrees",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getNightStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayLightStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAmbient",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDesaturation",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayLightStrengthBase",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getLerpNight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCloudyT",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCloudIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirFrontAirmass",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getCacheWorldAgeHours",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCacheYear",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCacheMonth",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCacheDay",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayMeanTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isDayDoFog",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayFogStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayFogDuration",
      "args": []
    }
  ]
}