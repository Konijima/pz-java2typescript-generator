{
  "name": "ClimateForecaster$DayForecast",
  "package": "zombie.iso.weather",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "DayForecast",
      "describe": [],
      "args": []
    }
  ],
  "fields": [],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getIndexOffset",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$ForecastValue",
      "name": "getTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$ForecastValue",
      "name": "getHumidity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$ForecastValue",
      "name": "getWindDirection",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$ForecastValue",
      "name": "getWindPower",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$ForecastValue",
      "name": "getCloudiness",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod",
      "name": "getWeatherPeriod",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isWeatherStarts",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWeatherStartTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWeatherEndTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isChanceOnSnow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getAirFrontString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHasFog",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$AirFront",
      "name": "getAirFront",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster$DayForecast",
      "name": "getWeatherOverlap",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getMeanWindAngleString",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFogStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFogDuration",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHasHeavyRain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHasStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHasTropicalStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isHasBlizzard",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<java.lang.Integer>",
      "name": "getWeatherStages",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDawn",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDusk",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayLightHours",
      "args": []
    }
  ]
}