{
  "name": "ClimateManager",
  "package": "zombie.iso.weather",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "ClimateManager",
      "describe": [],
      "args": []
    },
    {
      "scope": "package",
      "name": "Simulation",
      "describe": [],
      "args": []
    },
    {
      "scope": "package",
      "name": "Simulation",
      "describe": [],
      "args": [
        "int"
      ]
    }
  ],
  "fields": [
    {
      "name": "FRONT_COLD",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FRONT_STATIONARY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FRONT_WARM",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "MAX_WINDSPEED_KPH",
      "scope": "public",
      "type": "float",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "MAX_WINDSPEED_MPH",
      "scope": "public",
      "type": "float",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "WINTER_IS_COMING",
      "scope": "public",
      "type": "boolean",
      "describe": [
        "static"
      ]
    },
    {
      "name": "THE_DESCENDING_FOG",
      "scope": "public",
      "type": "boolean",
      "describe": [
        "static"
      ]
    },
    {
      "name": "A_STORM_IS_COMING",
      "scope": "public",
      "type": "boolean",
      "describe": [
        "static"
      ]
    },
    {
      "name": "FLOAT_DESATURATION",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_GLOBAL_LIGHT_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_NIGHT_STRENGTH",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_PRECIPITATION_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_TEMPERATURE",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_FOG_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_WIND_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_WIND_ANGLE_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_CLOUD_INTENSITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_AMBIENT",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_VIEW_DISTANCE",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_DAYLIGHT_STRENGTH",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_HUMIDITY",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FLOAT_MAX",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "COLOR_GLOBAL_LIGHT",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "COLOR_NEW_FOG",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "COLOR_MAX",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "BOOL_IS_SNOW",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "BOOL_MAX",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "AVG_FAV_AIR_TEMPERATURE",
      "scope": "public",
      "type": "float",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketUpdateClimateVars",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketWeatherUpdate",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketThunderEvent",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketFlare",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketAdminVarsUpdate",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketRequestAdminVars",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketClientChangedAdminVars",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "PacketClientChangedWeather",
      "scope": "public",
      "type": "byte",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "clamp01",
      "scope": "public",
      "type": "float",
      "describe": [
        "static"
      ]
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMaxWindspeedKph",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getMaxWindspeedMph",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "ToKph",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "ToMph",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "zombie.iso.weather.ClimateManager",
      "name": "getInstance",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "setInstance",
      "args": [
        "zombie.iso.weather.ClimateManager"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColNight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColNightNoMoon",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColNightMoon",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColFog",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColFogLegacy",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColFogNew",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getFogTintStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getFogTintTropical",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getFloatMax",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$ClimateFloat",
      "name": "getClimateFloat",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getColorMax",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$ClimateColor",
      "name": "getClimateColor",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getBoolMax",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$ClimateBool",
      "name": "getClimateBool",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEnabledSimulation",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getEnabledSimulation",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getEnabledFxUpdate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEnabledFxUpdate",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getEnabledWeatherGeneration",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setEnabledWeatherGeneration",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.core.Color",
      "name": "getGlobalLightInternal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getGlobalLight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getGlobalLightIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getColorNewFog",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setNightStrength",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDesaturation",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDesaturation",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirMass",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirMassDaily",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirMassTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayLightStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getNightStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDayMeanTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBaseTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSnowStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getPrecipitationIsSnow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getPrecipitationIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFogIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCorrectedWindAngleIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindPower",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindspeedKph",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCloudIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAmbient",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getViewDistance",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getHumidity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleDegrees",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleRadians",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindSpeedMovement",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindForceMovement",
      "args": [
        "zombie.characters.IsoGameCharacter",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isRaining",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getRainIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isSnowing",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSnowIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAmbient",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setViewDistance",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDayLightStrength",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPrecipitationIsSnow",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$DayInfo",
      "name": "getCurrentDay",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$DayInfo",
      "name": "getPreviousDay",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$DayInfo",
      "name": "getNextDay",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.erosion.season.ErosionSeason",
      "name": "getSeason",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFrontStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "stopWeatherAndThunder",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ThunderStorm",
      "name": "getThunderStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod",
      "name": "getWeatherPeriod",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getIsThunderStorming",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWeatherInterference",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "se.krka.kahlua.vm.KahluaTable",
      "name": "getModData",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirTemperatureForCharacter",
      "args": [
        "zombie.characters.IsoGameCharacter"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirTemperatureForCharacter",
      "args": [
        "zombie.characters.IsoGameCharacter",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirTemperatureForSquare",
      "args": [
        "zombie.iso.IsoGridSquare"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirTemperatureForSquare",
      "args": [
        "zombie.iso.IsoGridSquare",
        "zombie.vehicles.BaseVehicle"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAirTemperatureForSquare",
      "args": [
        "zombie.iso.IsoGridSquare",
        "zombie.vehicles.BaseVehicle",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getSeasonName",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSeasonProgression",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSeasonStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "init",
      "args": [
        "zombie.iso.IsoMetaGrid"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "updateEveryTenMins",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "double",
      "name": "getWindNoiseBase",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "double",
      "name": "getWindNoiseFinal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "double",
      "name": "getWindTickFinal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "updateOLD",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSnowFracNow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "resetOverrides",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "resetModded",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "resetAdmin",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "triggerWinterIsComingStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "triggerCustomWeather",
      "args": [
        "float",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "triggerCustomWeatherStage",
      "args": [
        "int",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "launchFlare",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSeasonColorDawn",
      "args": [
        "int",
        "int",
        "float",
        "float",
        "float",
        "float",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSeasonColorDay",
      "args": [
        "int",
        "int",
        "float",
        "float",
        "float",
        "float",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSeasonColorDusk",
      "args": [
        "int",
        "int",
        "float",
        "float",
        "float",
        "float",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getSeasonColor",
      "args": [
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "save",
      "args": [
        "java.io.DataOutputStream"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "load",
      "args": [
        "java.io.DataInputStream",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "postCellLoadSetSnow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "forceDayInfoUpdate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "final"
      ],
      "return": "void",
      "name": "receiveClimatePacket",
      "args": [
        "java.nio.ByteBuffer",
        "zombie.core.raknet.UdpConnection"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitServerStopWeather",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitServerTriggerStorm",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitServerTriggerLightning",
      "args": [
        "int",
        "int",
        "boolean",
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitServerStartRain",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitServerStopRain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitRequestAdminVars",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitClientChangeAdminVars",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitStopWeather",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitTriggerStorm",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitTriggerTropical",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitTriggerBlizzard",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "transmitGenerateWeather",
      "args": [
        "float",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "clamp",
      "args": [
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "int",
      "name": "clamp",
      "args": [
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "lerp",
      "args": [
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "clerp",
      "args": [
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "normalizeRange",
      "args": [
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "posToPosNegRange",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "triggerKateBobIntroStorm",
      "args": [
        "int",
        "int",
        "double",
        "float",
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "triggerKateBobIntroStorm",
      "args": [
        "int",
        "int",
        "double",
        "float",
        "float",
        "float",
        "float",
        "zombie.iso.weather.ClimateColorInfo"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getSimplexOffsetA",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getSimplexOffsetB",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getSimplexOffsetC",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getSimplexOffsetD",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getWorldAgeHours",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateValues",
      "name": "getClimateValuesCopy",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "CopyClimateValues",
      "args": [
        "zombie.iso.weather.ClimateValues"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateForecaster",
      "name": "getClimateForecaster",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateHistory",
      "name": "getClimateHistory",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "CalculateWeatherFrontStrength",
      "args": [
        "int",
        "int",
        "int",
        "zombie.iso.weather.ClimateManager$AirFront"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "java.lang.String",
      "name": "getWindAngleString",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "sendInitialState",
      "args": [
        "zombie.core.raknet.UdpConnection"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isUpdated",
      "args": []
    }
  ]
}