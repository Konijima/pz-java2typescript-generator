{
  "name": "IsoChunkMap",
  "package": "zombie.iso",
  "type": "class",
  "scope": "public",
  "describe": [
    "final"
  ],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "IsoChunkMap",
      "describe": [],
      "args": [
        "zombie.iso.IsoCell"
      ]
    }
  ],
  "fields": [
    {
      "name": "LEVELS",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "ChunksPerWidth",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "SharedChunks",
      "scope": "public",
      "type": "java.util.HashMap<java.lang.Integer,zombie.iso.IsoChunk>",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "MPWorldXA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "MPWorldYA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "MPWorldZA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "WorldXA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "WorldYA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "WorldZA",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "int",
      "scope": "public",
      "type": "final",
      "describe": [
        "static"
      ]
    },
    {
      "name": "int",
      "scope": "public",
      "type": "final",
      "describe": [
        "static"
      ]
    },
    {
      "name": "chunkStore",
      "scope": "public",
      "type": "java.util.concurrent.ConcurrentLinkedQueue<zombie.iso.IsoChunk>",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "bSettingChunk",
      "scope": "public",
      "type": "java.util.concurrent.locks.ReentrantLock",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "ChunkGridWidth",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "ChunkWidthInTiles",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "PlayerID",
      "scope": "public",
      "type": "int",
      "describe": []
    },
    {
      "name": "ignore",
      "scope": "public",
      "type": "boolean",
      "describe": []
    },
    {
      "name": "WorldX",
      "scope": "public",
      "type": "int",
      "describe": []
    },
    {
      "name": "WorldY",
      "scope": "public",
      "type": "int",
      "describe": []
    },
    {
      "name": "filenameServerRequests",
      "scope": "public",
      "type": "java.util.ArrayList<java.lang.String>",
      "describe": [
        "final"
      ]
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "CalcChunkWidth",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "setWorldStartPos",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Dispose",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setInitialPos",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "processAllLoadGridSquare",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "checkIntegrity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "checkIntegrityThread",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "LoadChunk",
      "args": [
        "int",
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoChunk",
      "name": "LoadChunkForLater",
      "args": [
        "int",
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoChunk",
      "name": "getChunkForGridSquare",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoChunk",
      "name": "getChunkCurrent",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGridSquare",
      "args": [
        "zombie.iso.IsoGridSquare",
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoGridSquare",
      "name": "getGridSquare",
      "args": [
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoGridSquare",
      "name": "getGridSquareDirect",
      "args": [
        "int",
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.IsoChunk",
      "name": "getChunk",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "setChunkDirect",
      "args": [
        "zombie.iso.IsoChunk",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "drawDebugChunkMap",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SwapChunkBuffers",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldXMin",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldYMin",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "ProcessChunkPos",
      "args": [
        "zombie.characters.IsoGameCharacter"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.areas.IsoRoom",
      "name": "getRoom",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWidthInTiles",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldXMinTiles",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldYMinTiles",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldXMaxTiles",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getWorldYMaxTiles",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Save",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderBloodForChunks",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "copy",
      "args": [
        "zombie.iso.IsoChunkMap"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Unload",
      "args": []
    }
  ]
}