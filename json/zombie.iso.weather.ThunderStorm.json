{
  "name": "ThunderStorm",
  "package": "zombie.iso.weather",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "ThunderStorm",
      "describe": [],
      "args": [
        "zombie.iso.weather.ClimateManager"
      ]
    }
  ],
  "fields": [
    {
      "name": "MAP_MIN_X",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "MAP_MIN_Y",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "MAP_MAX_X",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    },
    {
      "name": "MAP_MAX_Y",
      "scope": "public",
      "type": "int",
      "describe": [
        "static"
      ]
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<zombie.iso.weather.ThunderStorm$ThunderCloud>",
      "name": "getClouds",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "HasActiveThunderClouds",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "noise",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "stopAllClouds",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "stopCloud",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "int",
      "name": "getMapDiagonal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "startThunderCloud",
      "args": [
        "float",
        "float",
        "float",
        "float",
        "float",
        "double",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ThunderStorm$ThunderCloud",
      "name": "startThunderCloud",
      "args": [
        "float",
        "float",
        "float",
        "float",
        "float",
        "double",
        "boolean",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": [
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "applyLightningForPlayer",
      "args": [
        "zombie.core.opengl.RenderSettings$PlayerRenderSettings",
        "int",
        "zombie.characters.IsoPlayer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isModifyingNight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "triggerThunderEvent",
      "args": [
        "int",
        "int",
        "boolean",
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "writeNetThunderEvent",
      "args": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "readNetThunderEvent",
      "args": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "enqueueThunderEvent",
      "args": [
        "int",
        "int",
        "boolean",
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "save",
      "args": [
        "java.io.DataOutputStream"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "load",
      "args": [
        "java.io.DataInputStream"
      ]
    }
  ]
}