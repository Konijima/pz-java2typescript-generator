{
  "name": "BodyPart",
  "package": "zombie.characters.BodyDamage",
  "type": "class",
  "scope": "public",
  "describe": [
    "final"
  ],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "BodyPart",
      "describe": [],
      "args": [
        "zombie.characters.BodyDamage.BodyPartType",
        "zombie.characters.IsoGameCharacter"
      ]
    }
  ],
  "fields": [],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "AddDamage",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBandageDirty",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "DamageUpdate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getHealth",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetHealth",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "AddHealth",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "ReduceHealth",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "HasInjury",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "bandaged",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "bitten",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "bleeding",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsBleedingStemmed",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsCortorised",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsInfected",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetInfected",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetFakeInfected",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsFakeInfected",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "DisableFakeInfection",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "scratched",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "stitched",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "deepWounded",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "RestoreToFullHealth",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBandaged",
      "args": [
        "boolean",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBandaged",
      "args": [
        "boolean",
        "float",
        "boolean",
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetBitten",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetBitten",
      "args": [
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBleeding",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetBleedingStemmed",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetCortorised",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCut",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCut",
      "args": [
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "generateZombieInfection",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setScratched",
      "args": [
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetScratchedWeapon",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "generateDeepWound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "generateDeepShardWound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "SetScratchedWindow",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStitched",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "damageFromFirearm",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getPain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBiteTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBiteTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDeepWoundTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDeepWoundTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "haveGlass",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setHaveGlass",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getStitchTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStitchTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getIndex",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAlcoholLevel",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAlcoholLevel",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAdditionalPain",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getAdditionalPain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setAdditionalPain",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getBandageType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBandageType",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isGetBandageXp",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGetBandageXp",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isGetStitchXp",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGetStitchXp",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSplintFactor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSplintFactor",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFractureTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setFractureTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isGetSplintXp",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGetSplintXp",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isSplint",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSplint",
      "args": [
        "boolean",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "haveBullet",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setHaveBullet",
      "args": [
        "boolean",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBurnTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBurnTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isNeedBurnWash",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setNeedBurnWash",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getLastTimeBurnWash",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setLastTimeBurnWash",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isInfectedWound",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setInfectedWound",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.characters.BodyDamage.BodyPartType",
      "name": "getType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBleedingTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBleedingTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isDeepWounded",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDeepWounded",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBandageLife",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBandageLife",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getScratchTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setScratchTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWoundInfectionLevel",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWoundInfectionLevel",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBurned",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getSplintItem",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setSplintItem",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getPlantainFactor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPlantainFactor",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getGarlicFactor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setGarlicFactor",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getComfreyFactor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setComfreyFactor",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "sync",
      "args": [
        "zombie.characters.BodyDamage.BodyPart",
        "zombie.network.BodyDamageSync$Updater"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "sync",
      "args": [
        "java.nio.ByteBuffer",
        "byte"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCutTime",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCutTime",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isCut",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getScratchSpeedModifier",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setScratchSpeedModifier",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCutSpeedModifier",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCutSpeedModifier",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getBurnSpeedModifier",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setBurnSpeedModifier",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDeepWoundSpeedModifier",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDeepWoundSpeedModifier",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBurnt",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "generateBleeding",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getInnerTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSkinTemperature",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDistToCore",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getSkinSurface",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.characters.BodyDamage.Thermoregulator$ThermalNode",
      "name": "getThermalNode",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWetness",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWetness",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getStiffness",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setStiffness",
      "args": [
        "float"
      ]
    }
  ]
}