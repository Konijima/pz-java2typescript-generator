{
  "name": "WeatherPeriod",
  "package": "zombie.iso.weather",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "WeatherPeriod",
      "describe": [],
      "args": [
        "zombie.iso.weather.ClimateManager",
        "zombie.iso.weather.ThunderStorm"
      ]
    }
  ],
  "fields": [
    {
      "name": "STAGE_START",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_SHOWERS",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_HEAVY_PRECIP",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_STORM",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_CLEARING",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_MODERATE",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_DRIZZLE",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_BLIZZARD",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_TROPICAL_STORM",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_INTERMEZZO",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_MODDED",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_KATEBOB_STORM",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "STAGE_MAX",
      "scope": "public",
      "type": "int",
      "describe": [
        "static",
        "final"
      ]
    },
    {
      "name": "FRONT_STRENGTH_THRESHOLD",
      "scope": "public",
      "type": "float",
      "describe": [
        "static",
        "final"
      ]
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDummy",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "getMaxTemperatureInfluence",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setKateBobStormProgress",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setKateBobStormCoords",
      "args": [
        "int",
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorReddish",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorGreenish",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorBlueish",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorPurplish",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorTropical",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColorBlizzard",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isRunning",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getDuration",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateManager$AirFront",
      "name": "getFrontCache",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getCurrentStageID",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod$WeatherStage",
      "name": "getCurrentStage",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "double",
      "name": "getWeatherNoise",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCurrentStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getRainThreshold",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isThunderStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isTropicalStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isBlizzard",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getPrecipitationFinal",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.ClimateColorInfo",
      "name": "getCloudColor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCloudColor",
      "args": [
        "zombie.iso.weather.ClimateColorInfo"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTotalProgress",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getStageProgress",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasTropical",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasStorm",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasBlizzard",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasHeavyRain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTotalStrength",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod$WeatherStage",
      "name": "getStageForWorldAge",
      "args": [
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleDegrees",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getFrontType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPrintStuff",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getPrintStuff",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "initSimulationDebug",
      "args": [
        "zombie.iso.weather.ClimateManager$AirFront",
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "initSimulationDebug",
      "args": [
        "zombie.iso.weather.ClimateManager$AirFront",
        "double",
        "int",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "startCreateModdedPeriod",
      "args": [
        "boolean",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "endCreateModdedPeriod",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "stopWeatherPeriod",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "writeNetWeatherData",
      "args": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "readNetWeatherData",
      "args": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.ArrayList<zombie.iso.weather.WeatherPeriod$WeatherStage>",
      "name": "getWeatherStages",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod$WeatherStage",
      "name": "createAndAddModdedStage",
      "args": [
        "java.lang.String",
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "zombie.iso.weather.WeatherPeriod$WeatherStage",
      "name": "createAndAddStage",
      "args": [
        "int",
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": [
        "double"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "save",
      "args": [
        "java.io.DataOutputStream"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "load",
      "args": [
        "java.io.DataInputStream",
        "int"
      ]
    }
  ]
}