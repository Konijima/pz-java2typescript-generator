{
  "name": "DrainableComboItem",
  "package": "zombie.inventory.types",
  "type": "class",
  "scope": "public",
  "describe": [
    "final"
  ],
  "extends": [
    "zombie.inventory.InventoryItem"
  ],
  "implements": [
    "zombie.inventory.types.Drainable",
    "zombie.interfaces.IUpdater"
  ],
  "constructors": [
    {
      "scope": "package",
      "name": "DrainableComboItem",
      "describe": [],
      "args": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ]
    },
    {
      "scope": "package",
      "name": "DrainableComboItem",
      "describe": [],
      "args": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "zombie.scripting.objects.Item"
      ]
    }
  ],
  "fields": [
    {
      "name": "ReplaceOnCooked",
      "scope": "public",
      "type": "java.util.List<java.lang.String>",
      "describe": []
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "IsDrainable",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getSaveType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "CanStack",
      "args": [
        "zombie.inventory.InventoryItem"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getUsedDelta",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getDrainableUsesInt",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDrainableUsesFloat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "render",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderlast",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUsedDelta",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "shouldUpdateInWorld",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "Use",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "updateWeight",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWeightEmpty",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWeightEmpty",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isUseWhileEquiped",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUseWhileEquiped",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isUseWhileUnequiped",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUseWhileUnequiped",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getTicksPerEquipUse",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTicksPerEquipUse",
      "args": [
        "int"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getUseDelta",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setUseDelta",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getDelta",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDelta",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getTicks",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setTicks",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setReplaceOnDeplete",
      "args": [
        "java.lang.String"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnDeplete",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getReplaceOnDepleteFullType",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setHeat",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getHeat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getInvHeat",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "finishupdate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "int",
      "name": "getRemainingUses",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getRainFactor",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setRainFactor",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "canConsolidate",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCanConsolidate",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.util.List<java.lang.String>",
      "name": "getReplaceOnCooked",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setReplaceOnCooked",
      "args": [
        "java.util.List<java.lang.String>"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "java.lang.String",
      "name": "getOnCooked",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setOnCooked",
      "args": [
        "java.lang.String"
      ]
    }
  ]
}