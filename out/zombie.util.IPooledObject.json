{
  "name": "IPooledObject",
  "package": "zombie.util",
  "type": "interface",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [],
  "fields": [],
  "methods": [
    {
      "scope": "public",
      "describe": [
        "abstract"
      ],
      "return": "zombie.util.Pool<zombie.util.IPooledObject>",
      "name": "getPool",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "abstract"
      ],
      "return": "void",
      "name": "setPool",
      "args": [
        "zombie.util.Pool<zombie.util.IPooledObject>"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "abstract"
      ],
      "return": "void",
      "name": "release",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "abstract"
      ],
      "return": "boolean",
      "name": "isFree",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "abstract"
      ],
      "return": "void",
      "name": "setFree",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "default void",
      "name": "onReleased",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "release",
      "args": [
        "zombie.util.IPooledObject[]"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "tryReleaseAndBlank",
      "args": [
        "zombie.util.IPooledObject[]"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "releaseAndBlank",
      "args": [
        "zombie.util.IPooledObject[]"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "void",
      "name": "release",
      "args": [
        "java.util.List<? extends zombie.util.IPooledObject>"
      ]
    }
  ]
}