{
  "name": "IsoWeatherFX",
  "package": "zombie.iso.weather.fx",
  "type": "class",
  "scope": "public",
  "describe": [],
  "extends": [],
  "implements": [],
  "constructors": [
    {
      "scope": "package",
      "name": "IsoWeatherFX",
      "describe": [],
      "args": []
    }
  ],
  "fields": [
    {
      "name": "ZoomMod",
      "scope": "public",
      "type": "float",
      "describe": [
        "static"
      ]
    }
  ],
  "methods": [
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "init",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "update",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setDebugBounds",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "isDebugBounds",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWindAngleIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindAngleIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getRenderWindAngleRain",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWindPrecipIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindPrecipIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setWindIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getWindIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setFogIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getFogIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setCloudIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getCloudIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPrecipitationIntensity",
      "args": [
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "float",
      "name": "getPrecipitationIntensity",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "setPrecipitationIsSnow",
      "args": [
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "getPrecipitationIsSnow",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasCloudsToRender",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasPrecipitationToRender",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "boolean",
      "name": "hasFogToRender",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "render",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderLayered",
      "args": [
        "boolean",
        "boolean",
        "boolean"
      ]
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderClouds",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderFog",
      "args": []
    },
    {
      "scope": "public",
      "describe": [],
      "return": "void",
      "name": "renderPrecipitation",
      "args": []
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "clamp",
      "args": [
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "lerp",
      "args": [
        "float",
        "float",
        "float"
      ]
    },
    {
      "scope": "public",
      "describe": [
        "static"
      ],
      "return": "float",
      "name": "clerp",
      "args": [
        "float",
        "float",
        "float"
      ]
    }
  ]
}